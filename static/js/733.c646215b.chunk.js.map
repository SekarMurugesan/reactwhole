{"version":3,"file":"static/js/733.c646215b.chunk.js","mappings":"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","sources":["Component/Trial.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Card from 'react-bootstrap/Card'\r\nimport data from './data';\r\n\r\n\r\n\r\n\r\n\r\nconst Trial = () => {\r\n  //search\r\n const [filter,setFilter]=useState(\"\")\r\n const Search = (e)=>{setFilter(e.target.value)}\r\n let dataSearch=data.cardData.filter(item=>{\r\n   return Object.keys(item).some(keys=>item[keys].toString().toLowerCase().includes(filter.toString().toLowerCase()))\r\n })\r\n\r\n\r\n //grouping\r\n let arrays =[{id:12,service:[45,50]},{id:5,service:[7,8,9]}]\r\n var result = arrays.find(obj => {\r\n   return (obj.id === 12)\r\n }).service\r\n var resultone = arrays.find(obj => {\r\n   return (obj.id ===5)\r\n }).service\r\n var results = arrays.find(obj => {\r\n   return (obj.id === 12)\r\n }).id\r\n var resultss = arrays.find(obj => {\r\n   return (obj.id === 5)\r\n }).id\r\n let groups={12:arrays.find((e)=>{return (e.id===12)}).service,5:arrays.find((e)=>{return (e.id===5)}).service}\r\n let resultthree={one:result,resultss:resultone}\r\n \r\n const groupByYear = arr => {\r\n   const res = [];\r\n   const map = [];\r\n   arr.forEach(item => {\r\n      const temp = {};\r\n      if (!map[item.id]) {\r\n         map[item.id] = [];\r\n         temp[item.id] = map[item.id];\r\n         res.push(temp);\r\n      };\r\n      map[item.id].push(item.service );\r\n   });\r\n   return res;}\r\n   const groupBy = key => array =>\r\n   array.reduce((objectsByKeyValue, obj) => {\r\n     const value = obj[key];\r\n     objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\r\n     return objectsByKeyValue;\r\n   }, {});\r\n   const groupByBrand = groupBy('id');\r\n\r\n   //lazyloading-load more\r\n  const [postsToShow, setPostsToShow] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const postsPerPage = 3;\r\n  let arrayForHoldingPosts = [];\r\n\r\n  const loopWithSlice = (start, end) => {    \r\n    const slicedPosts = data.cardData.slice(start, end);\r\n    arrayForHoldingPosts = [...arrayForHoldingPosts, ...slicedPosts];\r\n    setPostsToShow(arrayForHoldingPosts);\r\n  };\r\n  const handleShowMorePosts = () => {\r\n    loopWithSlice(0, next + postsPerPage);\r\n    setNext(next + postsPerPage);\r\n  };\r\n\r\n  //lazy loading-infinite scroll\r\n  const [infiniteToShow, setinfiniteToShow] = useState([]);\r\n  const [infinitecount, setinfinitecount] = useState(0);\r\n  let arrayForHoldingPostsinfinite = [];\r\n\r\n  \r\n \r\n\r\n  useEffect(() => {     \r\n    const handleScroll = event => {      \r\n      if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\r\n        setinfinitecount(infinitecount =>infinitecount+3);\r\n        let infiniteposts=data.cardData.slice(0,infinitecount+3);\r\n        arrayForHoldingPostsinfinite=[...arrayForHoldingPostsinfinite,...infiniteposts];\r\n        setinfiniteToShow(arrayForHoldingPostsinfinite);\r\n        }\r\n    };\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [infinitecount]);\r\n  \r\n \r\n\r\n  return (\r\n\r\n    <>\r\n    <div id=\"scrollheight\" >\r\n   <input type=\"text\" placeholder='Search...'value={filter} onChange={Search}/>\r\n   <br/><br/>\r\n   <section className='p-4 container'>\r\n     <div className='row justify-content-center'>\r\n  {dataSearch.map((item,index)=>{\r\n  return(\r\n    <Card style={{ width: '18rem' }} key={item.id}>\r\n    <Card.Img variant=\"top\" src={item.img} style={{ height: '15rem' }} />\r\n    <Card.Body>\r\n      <Card.Title >{item.title}</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk of\r\n        the card's content.\r\n      </Card.Text>\r\n      <button variant=\"primary\">Go somewhere</button>\r\n    </Card.Body>\r\n  </Card>\r\n  )}  \r\n)}\r\n</div>\r\n</section>\r\n\r\n\r\n\r\n{JSON.stringify(result)}\r\n{JSON.stringify(resultone)}<br/>\r\n{JSON.stringify(resultthree)}<br/>\r\n{JSON.stringify(groupByYear(arrays), undefined, 4)}<br/>\r\n{JSON.stringify(groupByBrand(arrays))}<br/><br/>\r\n\r\n{/*lazy loading-load more*/}\r\n<div className='heading' >Lazy loading-load more</div>\r\n<div className='text-center'>\r\n      {postsToShow.map((e)=>{return(<img src={e.img} alt=\"img of nature\" width=\"400px\" height=\"300px\"/>)})}<br/><br/>\r\n      <button onClick={handleShowMorePosts} disabled={next>=21}>Load more</button>\r\n</div><br/>\r\n{/*lazy loading-infinite scroll*/}\r\n<div className='heading' >Lazy loading-infinite scroll</div>\r\n<div className='text-center'>\r\n      {infiniteToShow.map((e)=>{return(<img src={e.img} alt=\"img of nature\" width=\"400px\" height=\"300px\"/>)})}<br/><br/>\r\n      </div><br/>\r\n </div> \r\n</>\r\n  )\r\n}\r\nexport default Trial;\r\n"],"names":["key","useState","filter","setFilter","dataSearch","data","item","Object","keys","some","toString","toLowerCase","includes","arrays","id","service","result","find","obj","resultone","resultthree","e","one","resultss","groupByBrand","array","reduce","objectsByKeyValue","value","concat","postsToShow","setPostsToShow","next","setNext","arrayForHoldingPosts","infiniteToShow","setinfiniteToShow","infinitecount","setinfinitecount","arrayForHoldingPostsinfinite","useEffect","handleScroll","event","window","innerHeight","scrollY","document","body","offsetHeight","infiniteposts","addEventListener","removeEventListener","type","placeholder","onChange","target","className","map","index","style","width","variant","src","img","height","title","JSON","stringify","arr","res","forEach","temp","push","groupByYear","undefined","alt","onClick","start","end","slicedPosts","loopWithSlice","disabled"],"sourceRoot":""}